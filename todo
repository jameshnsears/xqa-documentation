./publish.sh

then perf_1_test.


utf-8 problem
= unicode © ok in shard to shard tests
= unicode © ok in ingest-balancer to ingest-balancer tests

nicn_nwp_078_17101111_0195.xml
=http://www.utf8-chartable.de/unicode-utf8-table.pl?start=128&number=128&utf8=string-literal&unicodeinhtml=hex
    =\xc2\xa9

192a0c3918e308c1374d57256b183045393c1cf9053a8614e9d7bb24b8261358 :-)

======

export PYTHONPATH=$HOME/GIT_REPOS/xqa-shard/src:$PYTHONPATH
XQA_WRITE_FOLDER=$HOME/tmp python $HOME/GIT_REPOS/xqa-shard/src/xqa/shard.py > $HOME/tmp/xqa-shard-1.log

// docker rm -f xqa-ingest-balancer
// docker run -d --net="host" --name="xqa-ingest-balancer" jameshnsears/xqa-ingest-balancer
cd /home/jsears/GIT_REPOS/xqa-ingest-balancer
mvn package -DskipTests
java -jar target/xqa-ingest-balancer-1.0.0-SNAPSHOT-jar-with-dependencies.jar > $HOME/tmp/xqa-ingest-balancer.log

export PYTHONPATH=$HOME/GIT_REPOS/xqa-ingest/src:$PYTHONPATH
python $HOME/GIT_REPOS/xqa-ingest/src/xqa/ingester.py -p $HOME/tmp > $HOME/tmp/xqa-ingester.log

// docker logs xqa-ingest-balancer > $HOME/tmp/xqa-ingest-balancer.log

export LOGFOLDER=$HOME/tmp
pytest /home/jsears/GIT_REPOS/xqa-documentation/test/perf_1_test.py


cli to eclipse shard incoming frame:
[0x2ee1a00]:0 <- @transfer(20) [handle=2, delivery-id=1, delivery-tag=b"\x00", message-format=0] (115933) "\x00Sp\xc0\x02\x01A\x00Sr\xc1)\x04\xa3\x0ex-opt-jms-destQ\x00\xa3\x12x-opt-jms-msg-typeQ\x03\x00Ss\xd0\x00\x00\x00\xa6\x00\x00\x00\x0a\xa1/ID:8406417f-420c-4fba-a12f-7390f1c3079e:1:1:1-1@\xa1!queue://xqa.shard.insert.98a82c64@@\xa1$f2188b6b-fe3b-4838-a4eb-58eb56152344\xa3\x18application/octet-stream@@\x83\x00\x00\x01`\xa3\x85\xf7\x1c\x00Su\xb0\x00\x01\xc3\xf2<issue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="V:\Production\NICN\Schema\INPUT issue.xsd" ID="078" contentType="Newspaper" contentProvider="3">\x0a\x09<metadatainfo>\x0a\x09\x09<newspaperID>078</newspaperID>\x0a\x09\x09<ocr>62.44</ocr>\x0a\x09\x09<language ocr="English" primary="Y">English</language>\x0a\x09\x09<sourceLibrary>\x0a\x09\x09\x09<libraryName>Bodleian Libraries</libraryName>\x0a\x09\x09\x09<libraryLocation>Oxford, United Kingdom</libraryLocation>\x0a\x09\x09\x09<libraryShelfmark>Nich. newsp. 17C</libraryShelfmark>\x0a\x09\x09\x09<copyrightStatement>? Bodleian Libraries, University of Oxford</copyr"... (truncated)

eclipse to eclipse shard incoming frame:
[0x2310b90]:0 <- @transfer(20) [handle=2, delivery-id=1, delivery-tag=b"\x00", message-format=0] (116093) "\x00Sp\xc0\x02\x01A\x00Sr\xc1)\x04\xa3\x0ex-opt-jms-destQ\x00\xa3\x12x-opt-jms-msg-typeQ\x03\x00Ss\xd0\x00\x00\x00\xa6\x00\x00\x00\x0a\xa1/ID:6924d0d8-a1a0-4823-bc26-cae824f42a2c:1:1:1-1@\xa1!queue://xqa.shard.insert.1d2c7ef8@@\xa1$8cdbe6d9-d47c-42e4-9cd4-1f05aa38570d\xa3\x18application/octet-stream@@\x83\x00\x00\x01`\xa3\x8d\xa0\xbc\x00Su\xb0\x00\x01\xc4\x92<issue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="V:\Production\NICN\Schema\INPUT issue.xsd" ID="078" contentType="Newspaper" contentProvider="3">\x0a\x09<metadatainfo>\x0a\x09\x09<newspaperID>078</newspaperID>\x0a\x09\x09<ocr>62.44</ocr>\x0a\x09\x09<language ocr="English" primary="Y">English</language>\x0a\x09\x09<sourceLibrary>\x0a\x09\x09\x09<libraryName>Bodleian Libraries</libraryName>\x0a\x09\x09\x09<libraryLocation>Oxford, United Kingdom</libraryLocation>\x0a\x09\x09\x09<libraryShelfmark>Nich. newsp. 17C</libraryShelfmark>\x0a\x09\x09\x09<copyrightStatement>\xc2\xa9 Bodleian Libraries, University of Oxford"... (truncated)


==================

reset ingest-balancer to INFO

test perf & extend to provide perf stats...
= do a performance comparison (using extra data + multiple shards)
    = record results in a .xls
    = put results, in graph form, in performance.md

==================

in shard - how to show how many concurrent connections are active?

==================

tidy up github notes & merge the todo notes in here

==================

2017-12-28 17:07:53.913     ERROR --- [    InserterThread-5]:                       run,  46: Transport closed due to the peer exceeding our requested idle-timeout
javax.jms.JMSException: Transport closed due to the peer exceeding our requested idle-timeout
    at org.apache.qpid.jms.exceptions.JmsExceptionSupport.create(JmsExceptionSupport.java:86)
    at org.apache.qpid.jms.exceptions.JmsExceptionSupport.create(JmsExceptionSupport.java:108)
2017-12-28 17:07:53.914     ERROR --- [    InserterThread-2]:                       run,  46: Transport closed due to the peer exceeding our requested idle-timeout
    at org.apache.qpid.jms.JmsConnection.send(JmsConnection.java:692)
    at org.apache.qpid.jms.JmsConnection.send(JmsConnection.java:676)
    at org.apache.qpid.jms.JmsNoTxTransactionContext.send(JmsNoTxTransactionContext.java:36)
    at org.apache.qpid.jms.JmsSession.send(JmsSession.java:879)
    at org.apache.qpid.jms.JmsSession.send(JmsSession.java:770)
    at org.apache.qpid.jms.JmsMessageProducer.sendMessage(JmsMessageProducer.java:246)
    at org.apache.qpid.jms.JmsMessageProducer.send(JmsMessageProducer.java:176)
    at xqa.commons.MessageSender.sendMessage(MessageSender.java:54)
    at xqa.InserterThread.insert(InserterThread.java:151)
    at xqa.InserterThread.run(InserterThread.java:43)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
    at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.IOException: Transport closed due to the peer exceeding our requested idle-timeout
    at org.apache.qpid.jms.provider.amqp.AmqpProvider$IdleTimeoutCheck.run(AmqpProvider.java:1432)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
    at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
    ... 3 more
javax.jms.JMSException: Transport closed due to the peer exceeding our requested idle-timeout
    at org.apache.qpid.jms.exceptions.JmsExceptionSupport.create(JmsExceptionSupport.java:86)
    at org.apache.qpid.jms.exceptions.JmsExceptionSupport.create(JmsExceptionSupport.java:108)
    at org.apache.qpid.jms.JmsConnection.send(JmsConnection.java:692)
    at org.apache.qpid.jms.JmsConnection.send(JmsConnection.java:676)
    at org.apache.qpid.jms.JmsNoTxTransactionContext.send(JmsNoTxTransactionContext.java:36)
    at org.apache.qpid.jms.JmsSession.send(JmsSession.java:879)
    at org.apache.qpid.jms.JmsSession.send(JmsSession.java:770)
    at org.apache.qpid.jms.JmsMessageProducer.sendMessage(JmsMessageProducer.java:246)
    at org.apache.qpid.jms.JmsMessageProducer.send(JmsMessageProducer.java:176)
    at xqa.commons.MessageSender.sendMessage(MessageSender.java:54)
    at xqa.InserterThread.insert(InserterThread.java:151)
    at xqa.InserterThread.run(InserterThread.java:43)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
    at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.IOException: Transport closed due to the peer exceeding our requested idle-timeout
    at org.apache.qpid.jms.provider.amqp.AmqpProvider$IdleTimeoutCheck.run(AmqpProvider.java:1432)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
    at java.util.concurrent.FutureTask.run(FutureTask.java:266)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
    ... 3 more

==================

= use the subject to hold the ingest filename
    = on xqa-ing* use the subject branch
        = see: http://activemq.apache.org/amqp.html

==================

PN_TRACE_EVT=1 PN_TRACE_FRM=1 python receiver.py

==================

take off an ingest msg in a transactional...
tx.start
= take off message
= find smallest shard
= send to smallest shard
= tx.commit

if no shards reply then tx.rollback, wait a little an try n times more before shutting down

==================

have it so that tags in github are all alphabetical + similar

==================

pycodestyle - in pip - use it!

===================

-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=<PORT_NUMBER> -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=<HOST'S_IP>
service:jmx:rmi:///jndi/rmi://<HOST'S_IP>:<PORT_NUMBER>/jmxrmi

==================

. use angular 2 on ui component

. create a video of using the app?

. test/e2e/
. test/integration/
. test/unit
. test/perf - 100 xml files?

. produce performance metrics for XQA v. normal BaseX (file); BaseX RAM.

. bdd
= behave v. lettuce - these are supported in pycharm

. in xqa-document/README mention sharding and materialised views: see Microsoft cloud patterns

. create example deployment topography diagrams

. bold cassandra onto everything for unit test asserts
